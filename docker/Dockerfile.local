# DBX AI Aviation System - Local Development Dockerfile
# Optimized for development with hot reload and debugging

FROM python:3.11-slim

# Build arguments
ARG BUILD_DATE
ARG VERSION=2.0.0-dev

# Labels
LABEL maintainer="DBX AI Team" \
      version="${VERSION}" \
      description="DBX AI Aviation System - Local Development" \
      build-date="${BUILD_DATE}"

# Development environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app/src \
    ENVIRONMENT=development \
    API_DEBUG=true \
    API_RELOAD=true

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    curl \
    ca-certificates \
    git \
    vim \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for development
RUN groupadd -r dbx && useradd -r -g dbx -d /app -s /bin/bash -m dbx

# Set working directory
WORKDIR /app

# Create necessary directories
RUN mkdir -p /app/{src,data,logs,cache,reports} && \
    mkdir -p /app/data/{models,training_data,uploads,results} && \
    chown -R dbx:dbx /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir uvicorn[standard] watchfiles

# Install additional development dependencies
RUN pip install --no-cache-dir \
    pytest \
    pytest-asyncio \
    pytest-cov \
    black \
    flake8 \
    mypy \
    ipython \
    jupyter

# Switch to non-root user
USER dbx

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Development startup script
CMD ["sh", "-c", "cd /app/src && python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level debug"]