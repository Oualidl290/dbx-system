# ðŸ§ª DBX AI Aviation System - Staging Kubernetes Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbx-ai-aviation
  namespace: staging
  labels:
    app: dbx-ai-aviation
    version: v2.0.0
    environment: staging
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dbx-ai-aviation
  template:
    metadata:
      labels:
        app: dbx-ai-aviation
        version: v2.0.0
        environment: staging
    spec:
      containers:
      - name: dbx-ai-aviation
        image: ghcr.io/your-org/dbx-ai-aviation:${IMAGE_TAG}
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: dbx-secrets-staging
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: dbx-secrets-staging
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: dbx-secrets-staging
              key: secret-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: dbx-ai-aviation-service
  namespace: staging
  labels:
    app: dbx-ai-aviation
spec:
  selector:
    app: dbx-ai-aviation
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dbx-ai-aviation-ingress
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
spec:
  tls:
  - hosts:
    - staging.dbx-ai.com
    secretName: dbx-ai-aviation-staging-tls
  rules:
  - host: staging.dbx-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dbx-ai-aviation-service
            port:
              number: 80